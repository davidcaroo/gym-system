// Script de prueba para la autenticaci√≥n
// Ejecutar: node test-auth.js

const axios = require('axios');

const baseURL = 'http://localhost:3001/api';

async function testAuth() {
    console.log('üß™ Iniciando pruebas de autenticaci√≥n...\n');

    try {
        // 1. Probar login con credenciales correctas
        console.log('1. üîê Probando login con credenciales correctas...');
        const loginResponse = await axios.post(`${baseURL}/auth/login`, {
            username: 'admin',
            password: 'admin123'
        }, {
            withCredentials: true
        });

        console.log('‚úÖ Login exitoso:', loginResponse.data);
        const cookies = loginResponse.headers['set-cookie'];

        // 2. Probar acceso a ruta protegida sin autenticaci√≥n
        console.log('\n2. üö´ Probando acceso a ruta protegida sin autenticaci√≥n...');
        try {
            await axios.get(`${baseURL}/miembros`);
            console.log('‚ùå ERROR: Deber√≠a haber fallado');
        } catch (error) {
            console.log('‚úÖ Acceso denegado correctamente:', error.response.data);
        }

        // 3. Probar acceso a ruta protegida con autenticaci√≥n
        console.log('\n3. üîì Probando acceso a ruta protegida con autenticaci√≥n...');
        const protectedResponse = await axios.get(`${baseURL}/miembros`, {
            headers: {
                'Cookie': cookies[0]
            }
        });
        console.log('‚úÖ Acceso autorizado:', protectedResponse.data);

        // 4. Probar verificaci√≥n de sesi√≥n
        console.log('\n4. ‚úîÔ∏è Probando verificaci√≥n de sesi√≥n...');
        const verifyResponse = await axios.get(`${baseURL}/auth/verify`, {
            headers: {
                'Cookie': cookies[0]
            }
        });
        console.log('‚úÖ Sesi√≥n verificada:', verifyResponse.data);

        // 5. Probar logout
        console.log('\n5. üëã Probando logout...');
        const logoutResponse = await axios.post(`${baseURL}/auth/logout`, {}, {
            headers: {
                'Cookie': cookies[0]
            }
        });
        console.log('‚úÖ Logout exitoso:', logoutResponse.data);

        // 6. Probar login con credenciales incorrectas
        console.log('\n6. ‚ùå Probando login con credenciales incorrectas...');
        try {
            await axios.post(`${baseURL}/auth/login`, {
                username: 'admin',
                password: 'wrongpassword'
            });
            console.log('‚ùå ERROR: Deber√≠a haber fallado');
        } catch (error) {
            console.log('‚úÖ Login rechazado correctamente:', error.response.data);
        }

        console.log('\nüéâ ¬°Todas las pruebas de autenticaci√≥n pasaron exitosamente!');

    } catch (error) {
        console.error('‚ùå Error en las pruebas:', error.response?.data || error.message);
    }
}

// Solo ejecutar si se instala axios
const exec = require('child_process').exec;
exec('npm list axios', (error, stdout, stderr) => {
    if (error) {
        console.log('üì¶ Instalando axios para las pruebas...');
        exec('npm install axios', (installError) => {
            if (installError) {
                console.error('‚ùå Error instalando axios:', installError);
                return;
            }
            testAuth();
        });
    } else {
        testAuth();
    }
});
